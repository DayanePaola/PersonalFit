@model Model.ProfessorModel

@{
    ViewBag.Title = "Personal Fit - Novo";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int idUsuario = (int)ViewData["idUsuario"];
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ProfessorModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("idUsuario", idUsuario)
        <div class="form-group">
            @Html.LabelFor(model => model.UsuarioFK, "UsuarioFK", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UsuarioFK", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UsuarioFK, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @id = "inputCpf", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cref, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cref, new { htmlAttributes = new { @id = "inputCref", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cref, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    $('#inputCref').mask('000000-S/SS');
    $('#inputCpf').mask('000.000.000-00', { reverse: true });
</script>
